// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
	"name": "Ubuntu",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:jammy",
  "runArgs": [
    "--gpus=all"
  ],
  "remoteEnv": {
    "PATH": "${containerEnv:PATH}:/usr/local/cuda/bin",
		"CUDADIR" : "/usr/local/cuda"
  },
	// https://containers.dev/features
	"features": {
		"ghcr.io/devcontainers/features/git:1": {},
		"ghcr.io/devcontainers/features/git-lfs:1": {},
		// "ghcr.io/devcontainers/features/nvidia-cuda:1": {},
    // "ghcr.io/devcontainers/features/nvidia-cuda:1": {
    //   "installCudnn": true
    // },
		// https://github.com/psaboia/devcontainer-nvidia-base
		// https://github.com/Stability-AI/StableStudio/blob/main/.devcontainer/gpu-webui/devcontainer.json
		// https://github.com/devcontainers/features/pkgs/container/features%2Fnvidia-cuda
		// https://containers.dev/features
		// https://github.com/devcontainers/features/tree/main/src/nvidia-cuda
		// https://github.com/devcontainers/features/blob/main/src/nvidia-cuda/devcontainer-feature.json
		// https://developer.download.nvidia.com/compute/cuda/repos/rhel9/x86_64/
		// https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/
		// libcudnn8-8.9.3.28-1.cuda12.1.x86_64.rpm
		// libcudnn8_8.9.3.28-1+cuda12.1_amd64.deb
		"ghcr.io/devcontainers/features/nvidia-cuda:1": {
			// "cudaVersion": "12.3",
			// "cudaVersion": "11.8",
			"cudaVersion": "12.2",
			"cudnnVersion": "8.9.5.29",
			// "cudaVersion": "12.1",
			// "installCudnn": true,
			// "installCudnnDev": true,
			// "cudnnVersion": "8.9.3.28",
			"installToolkit": true
			//"installNvtx": true
		},
		// "ghcr.io/devcontainers/features/python:1": {},
		"ghcr.io/devcontainers/features/java:1": {
      // "version": "none",
      "version": "17",
      "installMaven": "false",
      "installGradle": "false"
    },
		"ghcr.io/rocker-org/devcontainer-features/pandoc:1": {},
		"ghcr.io/devcontainers-contrib/features/bash-command:1": {},
		"ghcr.io/devcontainers-contrib/features/curl-apt-get:1": {},
		// "ghcr.io/devcontainers-contrib/features/pipx-package:1": {},
		// "ghcr.io/devcontainers-contrib/features/pylint:2": {},
		"ghcr.io/devcontainers-contrib/features/wget-apt-get:1": {},
		"ghcr.io/stuartleeks/dev-container-features/shell-history:0": {},
		"ghcr.io/eliises/devcontainer-features/bash-profile:1": {}
	},
	// containerWorkspaceFolder points to the git project root
	// containerWorkspaceFolderBasename fails
	// hmf@gandalf:~$ cd /mnt/ssd2/hmf/datasets/computer_vision/kaggle_cats_and_dogs
	// hmf@gandalf:.../kaggle_cats_and_dogs$ scp kagglecatsanddogs_5340.zip  hmf@10.61.4.52:~/kagglecatsanddogs_5340.zip
	// hmf@gandalf:~$ ssh -X 10.61.4.52
	// hmf@cc-cese-52:~$ unzip kagglecatsanddogs_5340.zip
	// hmf@cc-cese-52:~$ mkdir kagglecatsanddogs_3367a
	// hmf@cc-cese-52:~$ mv PetImages/ kagglecatsanddogs_3367a/PetImages/
	 "mounts": [
    //"source=${localEnv:HOME}/mvtec_ad,target=${containerWorkspaceFolder}/../mvtec_ad,type=bind,consistency=cached",
    "source=${localEnv:HOME}/kagglecatsanddogs_3367a/PetImages,target=${containerWorkspaceFolder}/../kagglecatsanddogs_3367a/PetImages,type=bind,consistency=cached"
	],
  "waitFor": "onCreateCommand",
  //"updateContentCommand": "python3 -m pip install -r requirements.txt",
  "updateContentCommand": "bash .devcontainer/install-dev-tools.sh",
  "postCreateCommand": [
    "nvidia-smi"
  ],
  "customizations": {
    "codespaces": {
      "openFiles": []
    },
    "vscode": {
      "extensions": [
        "ms-azuretools.vscode-docker",
				"donjayamanne.git-extension-pack",
		    "ms-toolsai.jupyter",
		    // "ms-python.python",
        "iliazeus.vscode-ansi",
				"vscjava.vscode-java-pack",
				"scalameta.metals",
        "SonarSource.sonarlint-vscode",
				"eamodio.gitlens",
        "streetsidesoftware.code-spell-checker",
		    "streetsidesoftware.code-spell-checker-portuguese",
		    "streetsidesoftware.code-spell-checker-british-english"
      ]
    }
  }

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
